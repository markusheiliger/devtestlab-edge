{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "minLength": 3,
            "metadata": {
                "description": "Cluster node admin username."
            }
        },
        "adminPublicKey": {
            "type": "securestring",
            "metadata": {
                "description": "Cluster node admin public key."
            }
        },
        "servicePrincipalObjectId": {
            "type": "securestring",
            "metadata": {
                "description": "Cluster service principal object ID."
            }
        },
        "servicePrincipalClientId": {
            "type": "securestring",
            "metadata": {
                "description": "Cluster service principal client ID."
            }
        },
        "servicePrincipalClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Cluster service principal client Secret."
            }
        },        
        "createRegistry": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Create a dedicated registry for the kubernetes cluster."
            }
        },
        "masterCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The number of Kubernetes masters for the cluster."
            },
            "minValue": 1,
            "maxValue": 5
        },
        "agentCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "The number of agents for the cluster.  This value can be from 1 to 100 (note, for Kubernetes clusters you will also get 1 or 2 public agents in addition to these seleted masters)"
            },
            "minValue": 1,
            "maxValue": 100
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "https://raw.githubusercontent.com/markusheiliger/devtestlab-templates/k8s-dashboard/ACS-Kubernetes"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "quickstartRepoRoot": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/",
        "dnsNamePrefix": "[resourceGroup().name]",
        "agentVMSize": "Standard_D2_v2",
        "orchestratorType": "Kubernetes",
        "roleDefinition_Contributor": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "roleAssignments_Contributor": "[guid(variables('roleDefinition_Contributor'), parameters('servicePrincipalObjectId'))]"
    },
    "resources": [
        {
            "name": "[variables('roleAssignments_Contributor')]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2017-05-01",
            "properties": {
                "roleDefinitionId": "[variables('roleDefinition_Contributor')]",
                "principalId": "[parameters('servicePrincipalObjectId')]",
                "scope": "[resourceGroup().id]"
            }
        },
        {
            "condition": "[parameters('createRegistry')]",
            "name": "[concat(deployment().name, '-Registry')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-01",
            "dependsOn": [
                "[resourceId('Microsoft.Authorization/roleAssignments', variables('roleAssignments_Contributor'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/azuredeploy.registry.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                }
            }
        },
        {
            "condition": false,
            "name": "[concat(deployment().name, '-QuickstartTemplate')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-01",
            "dependsOn": [
                "[resourceId('Microsoft.Authorization/roleAssignments', variables('roleAssignments_Contributor'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "validationLevel": "Template",
                "templateLink": {
                    "uri": "[concat(variables('quickstartRepoRoot'), '101-acs-kubernetes/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "dnsNamePrefix": {
                        "value": "[variables('dnsNamePrefix')]"
                    },
                    "agentCount": {
                        "value": "[parameters('agentCount')]"
                    },
                    "agentVMSize": {
                        "value": "[variables('agentVMSize')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "orchestratorType": {
                        "value": "[variables('orchestratorType')]"
                    },
                    "masterCount": {
                        "value": "[parameters('masterCount')]"
                    },
                    "sshRSAPublicKey": {
                        "value": "[parameters('adminPublicKey')]"
                    },
                    "servicePrincipalClientId": {
                        "value": "[parameters('servicePrincipalClientId')]"
                    },
                    "servicePrincipalClientSecret": {
                        "value": "[parameters('servicePrincipalClientSecret')]"
                    }
                }
            }
        }
    ],
    "outputs": {
    }
}